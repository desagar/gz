box:
  id: golang
  ports:
    - "5000"

dev:
  steps:
    - internal/watch:
        code: |
          go build ./...
          ./source
        reload: true

# Build definition
build:
  # The steps that will be executed on build
  steps:

    # golint step!
    - wercker/golint

    # Build the project
    - script:
        name: go build
        code: |
          CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o gz-hello . 

    # Copy binary to a location that gets passed along to the deploy pipeline
    - script:
        name: copy binary
        code: cp gz-hello "$WERCKER_OUTPUT_DIR"
    
    #- zvelo/docker-save:
     #   image: localgz/hello
        
deploy:
  box:
    id: alpine
    cmd: /bin/sh

  steps:
    - script:
        name: prepare
        code: cp ./gz-hello /gz-hello

    - internal/docker-scratch-push:
        repository: localhost:5000/gz/hello
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        registry: http://localhost:5000/v2
        ports: "5000"
        cmd: /gz-hello

push-wcr:
  box:
    id: alpine
    cmd: /bin/sh

  steps:
    - script:
        name: prepare
        code: cp ./gz-hello /gz-hello

    - internal/docker-push:
        repository: wcr.io/wercker/hello
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        registry: https://wcr.io/v2
        username: $WCR_USERNAME
        password: $WCR_PASSWORD
        cmd: ./gz-hello
        